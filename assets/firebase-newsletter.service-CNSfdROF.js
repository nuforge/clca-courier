const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/pdfProcessor-Dw1ra2ze.js","assets/index-DsgKP-0L.js","assets/index-Wpal-Rj_.css"])))=>i.map(i=>d[i]);
import{l as n,r as y,f as D,bn as P,bo as E}from"./index-DsgKP-0L.js";import{firestoreService as d}from"./firebase-firestore.service-DV1lPEDP.js";import{firebaseStorageService as T}from"./firebase-storage.service-DFtnWO6B.js";import{f as M}from"./firebase-auth.service-03qodj7b.js";const x={spring:3,summer:6,fall:9,winter:12},v=["January","February","March","April","May","June","July","August","September","October","November","December"],N={spring:"Spring",summer:"Summer",fall:"Fall",winter:"Winter"};class V{parseFilenameDate(t){const e=t.match(/^(\d{4})\.(.+?)[-.]/);if(!e||!e[1]||!e[2])return n.warn(`Could not parse date from filename: ${t}`),null;const a=parseInt(e[1],10),r=e[2].toLowerCase(),s=r.match(/^(\d{1,2})$/);if(s&&s[1]){const o=parseInt(s[1],10);if(o>=1&&o<=12)return this.createMonthlyDate(a,o)}if(r in x){const o=r;return this.createSeasonalDate(a,o)}return n.warn(`Unrecognized date format in filename: ${t}`),null}createMonthlyDate(t,e){const a=new Date(t,e-1,15);return{year:t,month:e,publicationDate:a.toISOString(),displayDate:`${v[e-1]} ${t}`,sortValue:t*100+e}}createSeasonalDate(t,e){const a=x[e],r=new Date(t,a-1,15);return{year:t,season:e,publicationDate:r.toISOString(),displayDate:`${N[e]} ${t}`,sortValue:t*100+a}}sortNewslettersByDate(t){return t.sort((e,a)=>a.sortValue-e.sortValue)}groupNewslettersByYear(t){return t.reduce((e,a)=>{const r=a.year;return e[r]||(e[r]=[]),e[r].push(a),e},{})}isCurrentYear(t){return t.year===new Date().getFullYear()}formatDateForContext(t,e){switch(e){case"short":return t.month?`${t.month.toString().padStart(2,"0")}/${t.year}`:`${t.season?.charAt(0).toUpperCase()}${t.year}`;case"long":return t.displayDate;case"archive":return t.month?`${v[t.month-1]} ${t.year}`:`${N[t.season]} ${t.year}`;default:return t.displayDate}}generateIssueNumber(t){return t.month?`${v[t.month-1]} ${t.year}`:`${N[t.season]} ${t.year}`}enhanceNewsletterMetadata(t,e={}){const a=this.parseFilenameDate(t);if(!a)return n.warn(`Could not enhance metadata for ${t} - date parsing failed`),e;const r={...e,filename:t,year:a.year,publicationDate:a.publicationDate,displayDate:a.displayDate,issueNumber:this.generateIssueNumber(a),title:e.title||this.generateTitleFromDate(a),sortValue:a.sortValue};return a.month!==void 0&&(r.month=a.month),a.season!==void 0&&(r.season=a.season),r}generateTitleFromDate(t){return`Conashaugh Lakes Courier - ${t.displayDate}`}processBatchFilenames(t){return t.map(e=>{const a=this.parseFilenameDate(e),r=this.enhanceNewsletterMetadata(e);return{filename:e,parsed:a,enhanced:r}})}}const S=new V;async function B(){if(typeof window>"u")throw new Error("PDF.js thumbnail generation requires browser environment");let w=0;const t=10;for(;!window.pdfjsLib&&w<t;)await new Promise(e=>setTimeout(e,100)),w++;if(!window.pdfjsLib)throw new Error("PDF.js library not available for thumbnail generation")}async function A(w,t={}){const e=Date.now(),{maxWidth:a=300,maxHeight:r=400,quality:s=.8,format:o="jpeg"}=t;try{n.debug(`Generating thumbnail for PDF: ${w.name}`),await B();const i=await w.arrayBuffer(),c=new Uint8Array(i),h=await(await window.pdfjsLib.getDocument(c).promise).getPage(1),l=h.getViewport({scale:1}),p=a/l.width,U=r/l.height,L=Math.min(p,U),f=h.getViewport({scale:L}),m=document.createElement("canvas"),b=m.getContext("2d");if(!b)throw new Error("Failed to get canvas 2D context");m.width=f.width,m.height=f.height,b.fillStyle="#ffffff",b.fillRect(0,0,m.width,m.height),await h.render({canvasContext:b,viewport:f}).promise;const $=o==="png"?"image/png":o==="webp"?"image/webp":"image/jpeg",C=m.toDataURL($,s),F=Math.round(C.length*.75),_=Date.now()-e;return n.success(`Thumbnail generated in ${_}ms: ${f.width}x${f.height} (${F} bytes)`),{thumbnailUrl:C,width:f.width,height:f.height,format:$,size:F,processingTime:_}}catch(i){const c=Date.now()-e;throw n.error(`Thumbnail generation failed after ${c}ms:`,i),i}}class R{_newsletters=y([]);_loading=y(!1);_error=y(null);_stats=y(null);unsubscribe=null;get newsletters(){return D(()=>this._newsletters.value)}get loading(){return D(()=>this._loading.value)}get error(){return D(()=>this._error.value)}get stats(){return D(()=>this._stats.value)}async initialize(){try{this._loading.value=!0,this._error.value=null,n.info("Initializing Firebase Newsletter Service..."),this.unsubscribe=d.subscribeToNewsletters(t=>{this._newsletters.value=t,this.updateStats(),n.success(`Real-time update: ${t.length} newsletters loaded`)}),await this.loadNewsletters(),this.generateStats(),n.success("Firebase Newsletter Service initialized successfully")}catch(t){throw this._error.value=t instanceof Error?t.message:"Initialization failed",n.error("Failed to initialize Firebase Newsletter Service:",t),t}finally{this._loading.value=!1}}async loadNewsletters(){try{this._loading.value=!0,this._error.value=null;const t=await d.getAllNewsletterMetadata();return this._newsletters.value=t,n.success(`Loaded ${t.length} newsletters from Firebase`),t}catch(t){throw this._error.value=t instanceof Error?t.message:"Failed to load newsletters",n.error("Error loading newsletters:",t),t}finally{this._loading.value=!1}}async loadAllNewslettersForAdmin(){try{this._loading.value=!0,this._error.value=null,n.info("Admin: Loading ALL newsletters (including unpublished)...");const e=await d.getAllNewslettersForAdmin();return this._newsletters.value=e,n.success(`Admin: Loaded ${e.length} total newsletters from Firebase`),e}catch(t){throw this._error.value=t instanceof Error?t.message:"Failed to load newsletters",n.error("Admin: Error loading all newsletters:",t),t}finally{this._loading.value=!1}}async searchNewsletters(t,e={}){try{const a=Date.now();let r=[],s=0,o=0;const i=t.trim().split(/\s+/).filter(u=>u.length>0);t.trim()?(r=await d.searchNewsletters(t),r.forEach(u=>{i.some(l=>u.title.toLowerCase().includes(l.toLowerCase())||u.tags.some(p=>p.toLowerCase()===l.toLowerCase()))?s++:o++})):r=this._newsletters.value,r=this.applyFilters(r,e);const c=this.generateSearchSuggestions(t,r),g=Date.now()-a;return{newsletters:r,totalCount:r.length,searchStats:{indexedPdfs:this._newsletters.value.length,searchTime:g,searchTerms:i,exactMatches:s,partialMatches:o},suggestions:c}}catch(a){throw n.error("Error searching newsletters:",a),a}}generateSearchSuggestions(t,e){if(!t||e.length===0)return[];const a=new Set,r=t.toLowerCase();return this._newsletters.value.forEach(s=>{s.tags.forEach(o=>{o.toLowerCase().includes(r)&&o.toLowerCase()!==r&&a.add(o)}),s.year.toString().includes(t)&&a.add(s.year.toString()),s.season&&s.season.toLowerCase().includes(r)&&a.add(s.season)}),Array.from(a).slice(0,5)}async getNewsletterById(t){try{const e=this._newsletters.value.find(a=>a.id===t);return e||await d.getNewsletterMetadata(t)}catch(e){throw n.error("Error getting newsletter by ID:",e),e}}getNewslettersByYear(t){return this._newsletters.value.filter(e=>e.year===t)}getFeaturedNewsletters(t=5){return this._newsletters.value.filter(e=>e.featured).slice(0,t)}getAvailableYears(){const t=new Set;return this._newsletters.value.forEach(e=>{t.add(e.year)}),Array.from(t).sort((e,a)=>a-e)}getAvailableTags(){const t=new Set;return this._newsletters.value.forEach(e=>{e.tags.forEach(a=>t.add(a))}),Array.from(t).sort()}applyFilters(t,e){let a=[...t];if(e.year&&(a=a.filter(r=>r.year===e.year)),e.month&&(a=a.filter(r=>r.publicationDate&&!r.season?new Date(r.publicationDate).getMonth()+1===e.month:!1)),e.tags&&e.tags.length>0&&(a=a.filter(r=>e.tags.some(s=>r.tags.some(o=>o.toLowerCase().includes(s.toLowerCase()))))),e.featured!==void 0&&(e.featured?a=a.filter(r=>r.featured===!0):a=a.filter(r=>!r.featured)),e.dateRange){const{start:r,end:s}=e.dateRange;r&&(a=a.filter(o=>new Date(o.publicationDate)>=new Date(r))),s&&(a=a.filter(o=>new Date(o.publicationDate)<=new Date(s)))}return e.hasDescription!==void 0&&(a=a.filter(r=>!!r.description===e.hasDescription)),e.hasThumbnail!==void 0&&(a=a.filter(r=>!!r.thumbnailUrl===e.hasThumbnail)),e.hasSearchableText!==void 0&&(a=a.filter(r=>!!r.searchableText===e.hasSearchableText)),e.pageCount&&(a=a.filter(r=>{const s=r.pageCount||0;switch(e.pageCount){case"1-5":return s>=1&&s<=5;case"6-10":return s>=6&&s<=10;case"11-20":return s>=11&&s<=20;case"20+":return s>20;default:return!0}})),e.availability&&(a=a.filter(r=>{const s=!!r.downloadUrl,o=!!r.storageRef;switch(e.availability){case"viewable":return s;case"downloadable":return s;case"cloud-only":return o;default:return!0}})),e.actions&&(a=a.filter(r=>{switch(e.actions){case"view":return!!r.downloadUrl;case"download":return!!r.downloadUrl;case"search":return!!r.searchableText;case"thumbnail":return!!r.thumbnailUrl;default:return!0}})),e.sortBy&&e.sortBy!=="relevance"&&(a=this.sortNewsletters(a,e.sortBy)),a}sortNewsletters(t,e){const[a,r]=e.split("-");return t.sort((s,o)=>{let i=0;switch(a){case"date":{const c=new Date(s.publicationDate),g=new Date(o.publicationDate);i=c.getTime()-g.getTime();break}case"title":i=s.title.localeCompare(o.title,void 0,{numeric:!0,sensitivity:"base"});break;case"pages":i=(s.pageCount||0)-(o.pageCount||0);break;default:i=0}return r==="desc"?-i:i})}generateStats(){try{const t=this._newsletters.value,e=new Date().getFullYear();this._stats.value={totalNewsletters:t.length,publishedThisYear:t.filter(a=>a.year===e).length,sourceCounts:{firebase:t.filter(a=>!!a.storageRef).length,local:0,drive:0,hybrid:0}}}catch(t){n.error("Error generating stats:",t)}}updateStats(){this.generateStats()}destroy(){this.unsubscribe&&(this.unsubscribe(),this.unsubscribe=null)}async uploadNewsletter(t,e,a){try{n.info(`Starting upload process for: ${t.name}`);const r=S.parseFilenameDate(t.name);n.debug("Enhanced date metadata:",r);let s={pageCount:0};try{const{processPdfFile:l}=await P(async()=>{const{processPdfFile:p}=await import("./pdfProcessor-Dw1ra2ze.js");return{processPdfFile:p}},__vite__mapDeps([0,1,2]));s=await l(t),n.debug("PDF processing result:",{pageCount:s.pageCount,wordCount:s.wordCount,hasText:!!s.textContent})}catch(l){n.warn("PDF processing failed, continuing with upload:",l)}let o;try{n.debug("Generating thumbnail for PDF...");const l=await A(t,{maxWidth:300,maxHeight:400,quality:.8,format:"jpeg"});o=l.thumbnailUrl,n.success(`Thumbnail generated: ${l.width}x${l.height} (${l.size} bytes)`)}catch(l){n.warn("Thumbnail generation failed, continuing without thumbnail:",l)}const i=await T.uploadNewsletterPdf(t,e,a),c=M.getCurrentUser(),g=c?.displayName||c?.email||"System",u={filename:t.name,title:e.title,description:"",publicationDate:r?.publicationDate||e.publicationDate,year:r?.year||e.year,fileSize:t.size,pageCount:s.pageCount,downloadUrl:i.downloadUrl,storageRef:i.storagePath,tags:e.tags||[],featured:e.featured||!1,isPublished:!0,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString(),createdBy:g,updatedBy:g,actions:{canView:!0,canDownload:!0,canSearch:!!s.textContent,hasThumbnail:!!o}};o&&(u.thumbnailUrl=o),r&&(r.month!==void 0&&(u.month=r.month),r.season&&(u.season=r.season),r.displayDate&&(u.displayDate=r.displayDate),r.sortValue!==void 0&&(u.sortValue=r.sortValue)),s.textContent&&(u.searchableText=s.textContent),e.issueNumber&&(u.issueNumber=e.issueNumber),e.season&&!u.season&&(u.season=e.season);const h=await d.saveNewsletterMetadata(u);if(s.wordCount)try{await d.updateNewsletterMetadata(h,{wordCount:s.wordCount}),n.debug(`Updated word count: ${s.wordCount}`)}catch(l){n.warn("Failed to update word count:",l)}return n.success("Newsletter uploaded successfully:",{id:h,filename:t.name,pageCount:s.pageCount,wordCount:s.wordCount,hasSearchableText:!!s.textContent}),h}catch(r){throw n.error("Error uploading newsletter:",r),r}}async generateNewsletterThumbnail(t){try{const e=await this.getNewsletterById(t);if(!e)throw new Error("Newsletter not found");if(e.thumbnailUrl){n.info(`Newsletter ${t} already has thumbnail, skipping`);return}if(!e.downloadUrl)throw new Error("Newsletter download URL not available");n.debug(`Downloading PDF for thumbnail generation: ${e.filename}`);const a=await fetch(e.downloadUrl);if(!a.ok)throw new Error(`Failed to download PDF: ${a.statusText}`);const r=await a.blob(),s=new File([r],e.filename,{type:"application/pdf"});n.debug(`Generating thumbnail for: ${e.filename}`);const o=await A(s,{maxWidth:300,maxHeight:400,quality:.8,format:"jpeg"});await d.updateNewsletterMetadata(t,{thumbnailUrl:o.thumbnailUrl,actions:{...e.actions,hasThumbnail:!0},updatedAt:new Date().toISOString(),updatedBy:M.getCurrentUser()?.displayName||"System"});const i=this._newsletters.value.findIndex(c=>c.id===t);if(i>-1){const c=this._newsletters.value[i];c&&(this._newsletters.value[i]={...c,thumbnailUrl:o.thumbnailUrl,actions:{...c.actions,hasThumbnail:!0}})}n.success(`Thumbnail generated for ${e.filename}: ${o.width}x${o.height} (${o.size} bytes)`)}catch(e){throw n.error(`Error generating thumbnail for newsletter ${t}:`,e),e}}async generateMultipleThumbnails(t,e){n.info(`Starting batch thumbnail generation for ${t.length} newsletters`);let a=0;const r=[];for(const s of t)try{const i=(await this.getNewsletterById(s))?.filename||s;e?.(a,t.length,i),await this.generateNewsletterThumbnail(s),a++,n.debug(`Thumbnail ${a}/${t.length} completed: ${i}`)}catch(o){const i=o instanceof Error?o.message:"Unknown error";r.push({id:s,error:i}),n.error(`Thumbnail generation failed for ${s}:`,o)}e?.(t.length,t.length,"Completed"),n.success(`Batch thumbnail generation completed: ${a}/${t.length} successful`),r.length>0&&n.warn(`${r.length} thumbnails failed to generate:`,r)}async deleteNewsletter(t){try{const e=await this.getNewsletterById(t);if(!e)throw new Error("Newsletter not found");if(e.storageRef)try{await T.deleteFile(e.storageRef),n.success("Newsletter PDF deleted from Firebase Storage:",e.storageRef)}catch(r){n.warn("Could not delete PDF from storage (may not exist):",r)}await d.deleteNewsletterMetadata(t);const a=this._newsletters.value.findIndex(r=>r.id===t);a>-1&&this._newsletters.value.splice(a,1),n.success("Newsletter deleted successfully:",t)}catch(e){throw n.error("Error deleting newsletter:",e),e}}async enhanceNewsletterWithDateInfo(t){try{const e=await this.getNewsletterById(t);if(!e)throw new Error("Newsletter not found");const a=S.enhanceNewsletterMetadata(e.filename,e);console.log(`🔧 Enhancing ${e.filename}:`),console.log("  📝 Enhanced data:",a),console.log("  📅 Month:",a.month),console.log("  🌸 Season:",a.season);const r={};a.month!==void 0?(r.month=a.month,r.season=E()):a.season!==void 0&&(r.season=a.season,r.month=E()),a.displayDate!==void 0&&(r.displayDate=a.displayDate),a.sortValue!==void 0&&(r.sortValue=a.sortValue),a.issueNumber!==void 0&&(r.issueNumber=a.issueNumber),console.log("  🔄 Updating Firebase with fields:",r),await d.updateNewsletterMetadata(t,r);const s=await this.getNewsletterById(t);console.log("  ✅ After update - Firebase data:",{filename:s?.filename,month:s?.month,season:s?.season,displayDate:s?.displayDate});const o=this._newsletters.value.findIndex(i=>i.id===t);if(o>-1){const i=this._newsletters.value[o];i&&(a.month!==void 0?(i.month=a.month,delete i.season):a.season!==void 0&&(i.season=a.season,delete i.month),a.displayDate!==void 0&&(i.displayDate=a.displayDate),a.sortValue!==void 0&&(i.sortValue=a.sortValue),a.issueNumber!==void 0&&(i.issueNumber=a.issueNumber))}n.success("Newsletter enhanced with date info:",t)}catch(e){throw n.error("Error enhancing newsletter with date info:",e),e}}async batchEnhanceNewslettersWithDateInfo(){try{const t=await this.loadAllNewslettersForAdmin(),e={processed:0,updated:0,errors:0,results:[]};for(const a of t){e.processed++;try{await this.enhanceNewsletterWithDateInfo(a.id),e.updated++,e.results.push(`✅ Enhanced: ${a.filename}`)}catch(r){e.errors++;const s=r instanceof Error?r.message:"Unknown error";e.results.push(`❌ Failed: ${a.filename} - ${s}`)}}return n.info(`Batch enhancement complete: ${e.updated}/${e.processed} updated`),e}catch(t){throw n.error("Error in batch enhance newsletters:",t),t}}async createRecordForLocalFile(t){try{const e=S.enhanceNewsletterMetadata(t);if(!e.year)throw new Error(`Could not parse date information from filename: ${t}`);const a={filename:t,title:e.title||`Conashaugh Lakes Courier - ${e.displayDate}`,description:"",publicationDate:e.publicationDate||new Date().toISOString(),year:e.year,fileSize:0,pageCount:0,downloadUrl:`${window.location.origin}/issues/${t}`,storageRef:"",tags:[],featured:!1,isPublished:!0,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString(),createdBy:"admin",updatedBy:"admin",actions:{canView:!0,canDownload:!0,canSearch:!1,hasThumbnail:!1}};e.issueNumber&&(a.issueNumber=e.issueNumber),e.month&&(a.month=e.month),e.season&&(a.season=e.season),e.displayDate&&(a.displayDate=e.displayDate),e.sortValue&&(a.sortValue=e.sortValue);const r=await d.saveNewsletterMetadata(a);return this._newsletters.value.push({id:r,...a}),n.success("Created database record for local file:",t),r}catch(e){throw n.error("Error creating record for local file:",e),e}}}const Y=new R;export{Y as f};
