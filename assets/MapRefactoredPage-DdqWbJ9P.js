import{ax as Ge,r as p,f as y,o as Qe,w as $e,v as Ee,_ as Pe,Z as Ie,E as M,y as S,G as C,M as N,C as d,ad as ke,I as g,J as ve,K as me,a6 as he,z as ne,H as q,B as R,an as Ae,F as B,l as Q,x as de,L as be,D as se,aa as Le,Q as qe,N as A,ac as Be,a5 as Ne,ay as He}from"./index-D_PnmBwd.js";import{Q as Oe}from"./QSpace-DbRYpapM.js";import{Q as De}from"./QSelect-DLXi3U4d.js";import{Q as ie,a as Z,b as j}from"./QItem-Bjh9HIyu.js";import{Q as xe}from"./QList-CHRoxCYs.js";import{Q as Ue}from"./QPage-nQH-DXuR.js";import{Q as Xe}from"./QSpinnerDots-Bk70eOq_.js";import{u as Ye}from"./useTheme-kHVGLq2f.js";import{_ as ze}from"./_plugin-vue_export-helper-DlAUqK2U.js";import"./QChip-CZ-mJB07.js";import"./QMenu-DtDpS83R.js";import"./format-Pp70c07r.js";import"./useUserSettings-Mtl-bqLT.js";const Fe=Ge("map",()=>{const b=p(null),t=p(null),e=p(""),s=p(!1),k=p(1),l=p({x:0,y:0}),n=p([]),r=p(-1),h=p({autoHighlight:!0,showLabels:!0,showIntersections:!0,animateTransitions:!0}),T=y(()=>b.value!==null),$=y(()=>r.value>0),E=y(()=>r.value<n.value.length-1);return{selectedRoadId:b,highlightedRoadId:t,searchQuery:e,isInfoPanelOpen:s,mapZoom:k,mapCenter:l,selectionHistory:n,historyIndex:r,userPreferences:h,hasSelection:T,canUndo:$,canRedo:E,setSelectedRoad:i=>{i!==b.value&&(i&&(n.value=n.value.slice(0,r.value+1),n.value.push(i),r.value=n.value.length-1),b.value=i,i&&(s.value=!0))},setHighlightedRoad:i=>{t.value=i},setSearchQuery:i=>{e.value=i},toggleInfoPanel:()=>{s.value=!s.value},closeInfoPanel:()=>{s.value=!1},clearSelection:()=>{b.value=null,t.value=null,s.value=!1},undo:()=>{$.value&&(r.value--,b.value=n.value[r.value]||null)},redo:()=>{E.value&&(r.value++,b.value=n.value[r.value]||null)},setZoom:i=>{k.value=Math.max(.5,Math.min(3,i))},setMapCenter:i=>{l.value=i},updateUserPreference:(i,o)=>{h.value[i]=o},reset:()=>{b.value=null,t.value=null,e.value="",s.value=!1,k.value=1,l.value={x:0,y:0},n.value=[],r.value=-1}}});class Ze{svgElement=null;constructor(t){t&&(this.svgElement=t)}setSVGElement(t){this.svgElement=t}parseRoads(t={}){if(!this.svgElement)throw new Error("SVG element not set. Call setSVGElement() first.");const e=[];return this.svgElement.querySelectorAll("g[id]").forEach(k=>{const l=k,n=l.id;if(t.excludeGroups?.includes(n)||t.includeOnly&&!t.includeOnly.includes(n))return;const r=l.querySelector("path");if(!r)return;const h=r.getAttribute("d");if(!h)return;const T=this.formatRoadName(n);e.push({id:n,name:T,pathData:h,element:r,group:l})}),e}getRoadById(t){if(!this.svgElement)return null;const e=this.svgElement.querySelector(`g[id="${t}"]`);if(!e)return null;const s=e.querySelector("path");if(!s)return null;const k=s.getAttribute("d");return k?{id:t,name:this.formatRoadName(t),pathData:k,element:s,group:e}:null}formatRoadName(t){return t.split("-").map(e=>e.charAt(0).toUpperCase()+e.slice(1)).join(" ")}getRoadIds(){if(!this.svgElement)return[];const t=this.svgElement.querySelectorAll("g[id]");return Array.from(t).map(e=>e.id)}hasRoad(t){return this.svgElement?!!this.svgElement.querySelector(`g[id="${t}"]`):!1}getRoadCount(){return this.svgElement?this.svgElement.querySelectorAll("g[id] path").length:0}validateSVGStructure(){const t=[];if(!this.svgElement)return t.push("No SVG element provided"),{isValid:!1,issues:t};const e=this.svgElement.querySelectorAll("g[id]");e.length===0&&t.push("No groups with IDs found");const s=this.svgElement.querySelectorAll("path:not(g path)");return s.length>0&&t.push(`${s.length} paths found outside of groups`),e.forEach(k=>{const l=k.querySelectorAll("path");l.length===0?t.push(`Group "${k.id}" has no path elements`):l.length>1&&t.push(`Group "${k.id}" has multiple path elements (${l.length})`)}),{isValid:t.length===0,issues:t}}getRoadStatistics(){const t=this.parseRoads();if(t.length===0)return{totalRoads:0,roadsWithPaths:0,averagePathLength:0,longestRoad:null,shortestRoad:null};const e=t.map(n=>({id:n.id,pathLength:n.pathData.length})),s=e.reduce((n,r)=>n+r.pathLength,0),k=e.reduce((n,r)=>r.pathLength>n.pathLength?r:n),l=e.reduce((n,r)=>r.pathLength<n.pathLength?r:n);return{totalRoads:t.length,roadsWithPaths:t.length,averagePathLength:Math.round(s/t.length),longestRoad:k,shortestRoad:l}}}const Ve=[{id:"default",name:"Default",strokeColor:"#323232",strokeWidth:4,hoverColor:"#007bff",selectedColor:"#28a745",defaultColor:"#323232",highlightColor:"#007bff",defaultStrokeWidth:4,highlightStrokeWidth:6},{id:"vibrant",name:"Vibrant",strokeColor:"#e74c3c",strokeWidth:5,hoverColor:"#f39c12",selectedColor:"#27ae60",defaultColor:"#e74c3c",highlightColor:"#f39c12",defaultStrokeWidth:5,highlightStrokeWidth:7},{id:"ocean",name:"Ocean",strokeColor:"#3498db",strokeWidth:4.5,hoverColor:"#2ecc71",selectedColor:"#9b59b6",defaultColor:"#3498db",highlightColor:"#2ecc71",defaultStrokeWidth:4.5,highlightStrokeWidth:6.5},{id:"sunset",name:"Sunset",strokeColor:"#f39c12",strokeWidth:4,hoverColor:"#e67e22",selectedColor:"#c0392b",defaultColor:"#f39c12",highlightColor:"#e67e22",defaultStrokeWidth:4,highlightStrokeWidth:6}];function je(){const b=Fe(),t=new Ze,e=Qe({selectedRoadId:null,selectedRoadIds:[],hoveredRoadId:null,zoomLevel:1,panX:0,panY:0}),s=p(Ve[0]),k=p(""),l=p(!1),n=p({x:0,y:0}),r=p(""),h=p([]),T=p(!1),$=p(null),E=y(()=>{if(!k.value)return h.value;const a=k.value.toLowerCase();return h.value.filter(u=>u.name.toLowerCase().includes(a)||u.id.toLowerCase().includes(a))}),w=y(()=>e.selectedRoadId&&h.value.find(a=>a.id===e.selectedRoadId)||null),H=y(()=>e.hoveredRoadId&&h.value.find(a=>a.id===e.hoveredRoadId)||null),W=y(()=>Ve),J=y(()=>({totalRoads:h.value.length,selectedCount:e.selectedRoadIds.length,filteredCount:E.value.length})),K=async a=>{$.value=a,t.setSVGElement(a),await new Promise(u=>setTimeout(u,100)),O()},O=()=>{try{console.log("Loading roads from SVG...");const a=t.parseRoads();console.log("Parsed roads:",a),h.value=a.map(f=>({id:f.id,name:f.name,pathData:f.pathData,element:f.element,group:f.group,color:s.value.strokeColor,strokeWidth:s.value.strokeWidth,isSelected:!1,isHighlighted:!1})),T.value=!0,console.log(`Successfully loaded ${h.value.length} roads from SVG`);const u=ue();u.isValid?console.log("SVG structure validation passed"):console.warn("SVG structure validation issues:",u.issues)}catch(a){console.error("Failed to load roads from SVG:",a),T.value=!1}},I=()=>{h.value.forEach(a=>{a.isSelected=e.selectedRoadIds.includes(a.id),a.isHighlighted=e.hoveredRoadId===a.id,a.isSelected?(a.color=s.value.selectedColor,a.strokeWidth=s.value.strokeWidth+2):a.isHighlighted?(a.color=s.value.hoverColor,a.strokeWidth=s.value.strokeWidth+1):(a.color=s.value.strokeColor,a.strokeWidth=s.value.strokeWidth)})},G=a=>{e.selectedRoadId&&b.setSelectedRoad(e.selectedRoadId),e.selectedRoadId=a,a?e.selectedRoadIds=[a]:e.selectedRoadIds=[],I(),a&&o(a,"selected"),h.value.forEach(u=>{u.id!==a&&u.element&&o(u.id,"default")})},U=a=>{e.selectedRoadIds=[...a],e.selectedRoadId=a.length>0&&a[0]||null,I(),h.value.forEach(u=>{a.includes(u.id)?o(u.id,"selected"):o(u.id,"default")})},ee=a=>{e.selectedRoadIds.includes(a)?(e.selectedRoadIds=e.selectedRoadIds.filter(f=>f!==a),o(a,"default")):(e.selectedRoadIds=[...e.selectedRoadIds,a],o(a,"selected")),e.selectedRoadId=e.selectedRoadIds.length>0&&e.selectedRoadIds[0]||null,I()},X=()=>{const a=[...e.selectedRoadIds];e.selectedRoadIds=[],e.selectedRoadId=null,a.forEach(u=>{o(u,"default")}),I()},P=a=>{e.hoveredRoadId=a,I(),a&&a!==e.selectedRoadId&&o(a,"hover")},i=()=>{e.hoveredRoadId&&e.hoveredRoadId!==e.selectedRoadId&&o(e.hoveredRoadId,"default"),e.hoveredRoadId=null,I()},o=(a,u)=>{const f=h.value.find(Y=>Y.id===a);if(!f?.element)return;const V=s.value;switch(u){case"hover":f.element.style.stroke=V.hoverColor,f.element.style.strokeWidth=String(V.strokeWidth+1),f.element.style.filter="brightness(1.2)";break;case"selected":f.element.style.stroke=V.selectedColor,f.element.style.strokeWidth=String(V.strokeWidth+2),f.element.style.filter="brightness(1.1)";break;case"default":default:f.element.style.stroke=V.strokeColor,f.element.style.strokeWidth=String(V.strokeWidth),f.element.style.filter="none";break}},m=a=>{s.value=a,I(),h.value.forEach(u=>{u.id===e.selectedRoadId?o(u.id,"selected"):u.id===e.hoveredRoadId?o(u.id,"hover"):o(u.id,"default")})},L=()=>{e.selectedRoadId=null,e.selectedRoadIds=[],e.hoveredRoadId=null,e.zoomLevel=1,e.panX=0,e.panY=0,I(),h.value.forEach(a=>{o(a.id,"default")})},D=()=>{e.zoomLevel=Math.min(e.zoomLevel*1.2,5)},z=()=>{e.zoomLevel=Math.max(e.zoomLevel/1.2,.5)},te=()=>{e.panX=0,e.panY=0,e.zoomLevel=1},ae=(a,u,f)=>{const V=h.value.find(Y=>Y.id===a);V&&(r.value=V.name,n.value={x:u,y:f},l.value=!0)},pe=()=>{l.value=!1},re=()=>{if(h.value.length===0)return null;const a=Math.floor(Math.random()*h.value.length);return h.value[a]||null},ce=a=>{const u=a.toLowerCase();return h.value.filter(f=>f.name.toLowerCase().includes(u))},oe=a=>h.value.find(f=>f.id===a)?.pathData||"",le=()=>({x:1e3,y:900}),ue=()=>t.validateSVGStructure(),fe=()=>t;$e(s,()=>{});const ge=y(()=>e.selectedRoadId),x=y(()=>e.hoveredRoadId),Ce=y(()=>W.value),Re=y(()=>H.value);return{state:e,currentTheme:s,searchQuery:k,showTooltip:l,tooltipPosition:n,tooltipContent:r,roads:h,isRoadsLoaded:T,svgElement:$,filteredRoads:E,selectedRoad:w,hoveredRoad:H,availableThemes:W,roadStatistics:J,selectedRoadId:ge,hoveredRoadId:x,themes:Ce,highlightedRoad:Re,setTheme:m,clearSelection:()=>G(null),searchRoads:ce,findIntersections:()=>[],highlightRoad:P,initializeSVGParser:K,loadRoadsFromSVG:O,selectRoad:G,selectMultipleRoads:U,toggleRoadSelection:ee,clearAllSelections:X,hoverRoad:P,clearHover:i,applyRoadStyles:o,applyTheme:m,resetMap:L,zoomIn:D,zoomOut:z,centerMap:te,showRoadTooltip:ae,hideTooltip:pe,getRandomRoad:re,findRoadsByName:ce,getRoadPath:oe,getRoadLabelPosition:le,validateSVGStructure:ue,getRoadParser:fe,updateRoadProperties:I}}const Te="0 0 2000 1800",We="matrix(1,0,0,1,-591.034,-160.657)",Je=[{id:"indian-run-court",name:"Indian Run Court",pathData:"M2346.77,1364.62C2368.82,1356.69 2351.51,1352.23 2403.37,1371.69C2431.68,1382.31 2437.39,1364.85 2470.46,1380.7C2523.93,1406.32 2527.01,1473.62 2519.64,1498.9C2515.44,1513.31 2499.17,1516.1 2479.62,1524.36C2471.96,1527.59 2468.21,1565.67 2427.53,1543.9"},{id:"conklin-lane",name:"Conklin Lane",pathData:"M972.279,1287.16C972.279,1287.16 990.673,1279.73 1011.92,1253.24C1033.18,1226.75 1052.15,1209.01 1054.69,1207.69"},{id:"geronimo-path",name:"Geronimo Path",pathData:"M1330.88,1732.12C1363.24,1780.62 1361.69,1805.33 1416.47,1809.49"},{id:"wappinger-court",name:"Wappinger Court",pathData:"M1291.08,1141.55C1291.08,1141.55 1336.9,1087.07 1349.96,1078"},{id:"pikewood-lane",name:"Pikewood Lane",pathData:"M1514.83,1254.72L1557.65,1212.95"},{id:"bobwood-lane",name:"Bobwood Lane",pathData:"M1616.77,1337.63L1647.35,1289.91"},{id:"cowaw-road",name:"Cowaw Road",pathData:"M1792.5,1285.57C1792.5,1285.57 1810.8,1322.18 1804.55,1344.07C1789.33,1397.36 1778.26,1395.51 1813.26,1447.16C1834,1477.76 1848.66,1506.14 1848.66,1506.14"},{id:"denege-circle",name:"Denege Circle",pathData:"M1615.23,938.034C1601.55,931.237 1602.99,918.9 1595.88,890.439"},{id:"oak-lane",name:"Oak Lane",pathData:"M1697.54,937.255C1671.62,966.604 1668.2,953.74 1636.69,946.257C1632.43,945.244 1615.27,938.052 1615.23,938.034"},{id:"water-lily-terrace",name:"Water Lily Terrace",pathData:"M1546.54,638.95C1546.54,638.95 1572.84,641.309 1603.94,736.476"},{id:"seneca-drive",name:"Seneca Drive",pathData:"M1346.67,232.793C1308.74,260.196 1231.17,278.528 1254.46,319.638C1316.11,363.006 1307.69,400.682 1330.67,417.378C1371.12,446.76 1389.04,507.411 1393.31,524.216C1403.81,565.494 1454.88,644.354 1339.79,826.711C1312,873.133 1289.9,920.712 1289.9,920.712C1289.9,920.712 1178.17,1048.12 1291.51,1140.38C1335.04,1175.82 1360.05,1183.1 1392.33,1207.83C1481.63,1276.23 1488.64,1222.1 1515.78,1257.19C1570.19,1334.72 1597.85,1413.67 1597.85,1413.67C1597.85,1413.67 1609.64,1453.52 1651.11,1469.04C1680.26,1480.18 1687.15,1470.55 1688.48,1413.64C1690.67,1317.82 1690.9,1290.12 1792.5,1285.57"},{id:"mohican-trail",name:"Mohican Trail",pathData:"M1750.23,293.989C1750.23,293.989 1720.39,405.167 1716.9,419.463C1713.54,433.214 1702.86,463.318 1768.66,520.122C1788.41,537.174 1823.97,567.282 1838.56,575.797C1867.25,592.552 1895.34,607.412 1918.4,643.244C1935.83,670.321 1946.52,692.101 1963.15,715.095C1982.06,741.256 2012.2,770.29 2031.44,798.141C2051.7,827.445 2075.65,882.413 2075.65,882.413C2075.65,882.413 2089.33,894.431 2082.87,989.059C2093.92,1020.37 2100.28,1036.31 2169.5,1032.65C2247.82,1028.35 2306.02,1053.06 2346.77,1095.9C2374.21,1125.06 2350.41,1157.66 2346.77,1201.8C2343.57,1241.17 2356.18,1309.1 2346.77,1364.62"},{id:"pokono-terrace",name:"Pokono Terrace",pathData:"M971.291,1068.61C971.291,1068.61 1051.3,932.486 1032.26,876.093C1011.72,815.231 1033.72,791.789 1098.71,773.268C1114.31,768.824 1132.08,740.858 1146.31,716.833C1159.7,694.242 1181.49,650.109 1181.49,650.109C1181.49,650.109 1208.72,596.462 1231.65,579.073C1254.58,561.684 1320.91,545.434 1320.91,545.434L1393.31,524.216C1393.31,524.216 1427.74,512.014 1444.89,505.726C1527.26,475.52 1519.58,470.571 1556.21,406.57C1556.21,406.57 1514.01,383.432 1488.14,298.627"},{id:"mohican-trail-north",name:"Mohican Trail North",pathData:"M2086.76,459.22C2050.81,466.138 2032.32,467.25 1976.83,482.205C1859.37,495.418 1838.56,575.797 1838.56,575.797C1838.56,575.797 1819.41,659.609 1779.43,696.947C1761.23,713.94 1781.12,734.601 1808.29,781.28C1824.39,808.951 1838.1,858.438 1855.97,870.117C1873.85,881.796 1912.62,894.764 1930.91,900.289C1964.28,910.371 1983.01,942.115 2075.65,882.413"},{id:"hay-road",name:"Hay Road",pathData:"M2031.44,798.141C2079.8,759.12 2104.35,757.331 2099.87,578.842C2100.7,553.581 2100.91,537.595 2100.54,526.399C2099.59,497.705 2094.82,500.48 2086.76,459.22C2075.12,399.646 2075.79,397.437 2067.93,329.001C2050.15,286.133 2031.75,291.482 2026.17,234.919"},{id:"oneida-way",name:"Oneida Way",pathData:"M1310.15,1463.24C1271.67,1395.3 1236.46,1395.82 1198.15,1352.91C1166.51,1317.46 1143.38,1239.53 1117.92,1225.84C1085.28,1208.28 1078.24,1231.25 1054.69,1207.69C1028.89,1181.88 1025.39,1100.46 971.291,1068.61C919.603,1030.79 812.471,991.951 787.861,932.397C770.725,890.93 738.068,851.91 729.037,807.671C719.405,760.492 742.038,721.962 680.815,606.452C636.342,522.543 669.443,476.295 732.444,441.086C789.827,408.344 805.994,464.301 845.477,466.883C906.058,470.789 879.458,430.901 879.458,430.901C879.458,430.901 893.996,382.774 971.291,364.774C1048.59,346.774 1086.61,353.004 1125.84,441.086C1138.87,467.193 1156.03,481.264 1182.69,520.122C1223.6,579.336 1230.02,662.985 1230.02,662.985C1230.02,662.985 1170.08,766.948 1289.9,920.712C1421.99,1090.41 1311.27,1181.33 1310.15,1463.24"},{id:"iroquois-trail",name:"Iroquois Trail",pathData:"M2082.87,989.059C2047.35,1001.75 2073.33,1048.42 2052.04,1067.59C2042.28,1076.39 2006.39,1084.01 1960.62,1101.51C1874.57,1134.39 1901.83,1188.56 1887.45,1217.91C1880.7,1231.68 1868.87,1242 1853.88,1245.6C1826.77,1252.11 1822.68,1243.97 1792.5,1285.57C1751.47,1323.7 1716.64,1288.44 1688.48,1413.64C1675.08,1438.54 1655.16,1467.88 1633,1469.8C1580,1474.4 1597.49,1453.16 1542.25,1455.72C1493.09,1458 1495.91,1439.09 1430.91,1464.67C1376.31,1486.39 1363.55,1457.83 1314.85,1463.24C1310.15,1463.24 1310.15,1463.24 1310.15,1463.24"},{id:"pine-brook-lane",name:"Pine Brook Lane",pathData:"M1734.44,978.903C1734.44,978.903 1821.93,913.242 1854.7,869.22"},{id:"whipple-way",name:"Whipple Way",pathData:"M1593.74,1832.97C1605.67,1810.16 1563.48,1716.8 1722.51,1737.66"},{id:"bennett-lane",name:"Bennett Lane",pathData:"M1444.31,505.938C1444.31,505.938 1469.47,567.87 1460.91,610.102"},{id:"white-tail-lane",name:"White Tail Lane",pathData:"M1922.27,288.669L1945.96,373.521L1976.83,482.205"},{id:"juneo-court",name:"Juneo Court",pathData:"M1867.01,395.535C1867.01,395.535 1851.01,345.454 1854.13,333.493"},{id:"island-terrace",name:"Island Terrace",pathData:"M1695.18,1106.96C1725.29,1083.62 1773.66,1058.81 1773.66,1058.81"},{id:"lenape-drive",name:"Lenape Drive",pathData:"M1668.31,910.752C1699.87,852.105 1695.97,818.699 1748.99,801.934C1771.82,794.716 1787.87,787.527 1807.95,780.695C1847.96,767.074 1963.15,715.095 1963.15,715.095"},{id:"bushkill-lane",name:"Bushkill Lane",pathData:"M1853.88,1245.6C1853.88,1245.6 1844.47,1330.86 1866.78,1339.34C1884.2,1345.97 1925.41,1356.52 1981.83,1387.97"},{id:"hiawatha-trail",name:"Hiawatha Trail",pathData:"M2346.77,1433.92C2346.77,1433.92 2360.94,1438.44 2373.4,1440.42C2384.33,1442.16 2397.74,1442.2 2402.67,1447.92C2415.68,1463.04 2438.59,1513.52 2427.53,1543.9C2416.64,1573.81 2396.97,1591.11 2363.87,1625.29C2339.9,1657.32 2292.81,1644.04 2261.98,1632.06"},{id:"overbrook-court",name:"Overbrook Court",pathData:"M1104.4,606.452L1179.39,654.321"},{id:"heyward-court",name:"Heyward Court",pathData:"M1104.4,606.452L1179.39,654.321"},{id:"black-oak-court",name:"Black Oak Court",pathData:"M1613.86,890.259C1613.86,890.259 1618.5,850.578 1631.91,834.966"},{id:"nanticoke-court",name:"Nanticoke Court",pathData:"M2100.5,525.135L2155.09,521.869"},{id:"montavk-court",name:"Montavk Court",pathData:"M2169.5,1032.65L2224.39,1047.33"}],Ke={class:"map-content"},et=["viewBox"],tt=["transform"],at=["id"],ot=["d"],lt=["viewBox"],st=["transform"],nt=["id","data-road-name"],dt=["d","onClick","onMouseenter","onMouseleave"],it=["d","stroke","stroke-width"],rt={class:"selected-roads-layer",transform:"matrix(1,0,0,1,-591.034,-160.657)"},ct=["id","data-road-name"],ut=["d","onClick","onMouseenter","onMouseleave"],ht=["d","stroke","stroke-width"],vt={key:0,class:"hovered-road-layer",transform:"matrix(1,0,0,1,-591.034,-160.657)"},mt=["id","data-road-name"],pt=["d"],ft=["d","stroke","stroke-width"],gt={key:0,class:"loading-overlay"},Ct={class:"text-caption"},Rt={class:"zoom-controls"},kt=Ee({__name:"InteractiveMapSVGRefactored",setup(b,{expose:t}){const{backgroundClasses:e,borderClasses:s,textClasses:k}=Ye(),{state:l,currentTheme:n,roads:r,isRoadsLoaded:h,selectedRoad:T,showTooltip:$,tooltipPosition:E,tooltipContent:w,roadStatistics:H,availableThemes:W,searchQuery:J,filteredRoads:K,initializeSVGParser:O,selectRoad:I,selectMultipleRoads:G,toggleRoadSelection:U,clearAllSelections:ee,hoverRoad:X,clearHover:P,zoomIn:i,zoomOut:o,centerMap:m,showRoadTooltip:L,hideTooltip:D,validateSVGStructure:z,applyTheme:te,getRandomRoad:ae}=je(),pe=p(),re=p(),ce=p(),oe=p(!1),le=p({x:0,y:0}),ue=y(()=>r.value.length),fe=y(()=>r.value.filter(c=>l.selectedRoadIds.includes(c.id))),ge=y(()=>r.value.filter(c=>!l.selectedRoadIds.includes(c.id)&&l.hoveredRoadId!==c.id)),x=y(()=>l.hoveredRoadId&&!l.selectedRoadIds.includes(l.hoveredRoadId)?r.value.find(c=>c.id===l.hoveredRoadId):null),Ce=async()=>{if(await Ie(),re.value){const c=re.value;if(c){Q.debug("Found SVG element, initializing parser..."),await O(c);const _=z();_.isValid||Q.warn("SVG structure validation issues:",_.issues)}else Q.error("SVG element not found")}else Q.error("SVG ref not available")};Pe(async()=>{await Ie(),await Ce()});const Re=c=>{const _=c.deltaY>0?-.1:.1,v=Math.max(.5,Math.min(5,l.zoomLevel+_));l.zoomLevel=v},ye=c=>{oe.value=!0,le.value={x:c.clientX,y:c.clientY}},Se=c=>{if(oe.value){const _=c.clientX-le.value.x,v=c.clientY-le.value.y;l.panX+=_,l.panY+=v,le.value={x:c.clientX,y:c.clientY}}},_e=()=>{oe.value=!1},we=()=>{oe.value=!1,P(),D()},Me=()=>{l.hoveredRoadId&&(Q.debug("Tooltip clicked for road:",l.hoveredRoadId),a(l.hoveredRoadId),D())},a=c=>{Q.debug("Road clicked:",c),U(c)},u=(c,_)=>{Q.debug("Road mouse enter:",c),X(c),L(c,_.clientX+10,_.clientY-10)},f=c=>{Q.debug("Road mouse leave:",c),l.hoveredRoadId===c&&(P(),D())},V=c=>l.selectedRoadIds.includes(c)?n.value.selectedColor:l.hoveredRoadId===c?n.value.hoverColor:n.value.strokeColor,Y=c=>l.selectedRoadIds.includes(c)?n.value.strokeWidth+2:l.hoveredRoadId===c?n.value.strokeWidth+1:n.value.strokeWidth;return t({selectRoad:I,selectMultipleRoads:G,toggleRoadSelection:U,clearAllSelections:ee,centerMap:m,zoomIn:i,zoomOut:o,hoverRoad:X,clearHover:P,currentTheme:n,availableThemes:W,applyTheme:te,roads:r,selectedRoad:T,state:l,roadStatistics:H,isRoadsLoaded:h,searchQuery:J,filteredRoads:K,getRandomRoad:ae}),(c,_)=>(S(),M("div",{class:ne(["interactive-map-container",g(e).card,g(s).light])},[C("div",Ke,[C("div",{ref_key:"mapContainer",ref:pe,class:"map-svg-container"},[(S(),M("svg",{class:"original-map-template",width:"100%",height:"100%",viewBox:g(Te),xmlns:"http://www.w3.org/2000/svg",style:ke({display:g(h)?"none":"block",opacity:g(h)?0:1})},[C("g",{transform:g(We)},[(S(!0),M(ve,null,me(g(Je),v=>(S(),M("g",{key:`template-${v.id}`,id:v.id},[C("path",{d:v.pathData,stroke:"#323232","stroke-width":"2",fill:"none"},null,8,ot)],8,at))),128))],8,tt)],12,et)),g(h)?(S(),M("svg",{key:0,ref_key:"interactiveSvgRef",ref:ce,class:"interactive-map-svg",width:"100%",height:"100%",viewBox:g(Te),xmlns:"http://www.w3.org/2000/svg",style:ke({transform:`translate(${g(l).panX}px, ${g(l).panY}px) scale(${g(l).zoomLevel})`,transition:"transform 0.3s ease"}),onWheel:he(Re,["prevent"]),onMousedown:ye,onMousemove:Se,onMouseup:_e,onMouseleave:we},[C("g",{class:"unselected-roads-layer",transform:g(We)},[(S(!0),M(ve,null,me(ge.value,v=>(S(),M("g",{key:`unselected-${v.id}`,id:v.id,"data-road-name":v.name,class:"road-group"},[C("path",{d:v.pathData,stroke:"transparent","stroke-width":"30",fill:"none",class:"road-hit-area",style:{cursor:"pointer","pointer-events":"stroke"},onClick:he(F=>a(v.id),["stop"]),onMouseenter:F=>u(v.id,F),onMouseleave:F=>f(v.id)},null,40,dt),C("path",{d:v.pathData,stroke:V(v.id),"stroke-width":Y(v.id),fill:"none",class:"road-path",style:{"pointer-events":"none"}},null,8,it)],8,nt))),128))],8,st),C("g",rt,[(S(!0),M(ve,null,me(fe.value,v=>(S(),M("g",{key:`selected-${v.id}`,id:`selected-${v.id}`,"data-road-name":v.name,class:"road-group"},[C("path",{d:v.pathData,stroke:"transparent","stroke-width":"30",fill:"none",class:"road-hit-area",style:{cursor:"pointer","pointer-events":"stroke"},onClick:he(F=>a(v.id),["stop"]),onMouseenter:F=>u(v.id,F),onMouseleave:F=>f(v.id)},null,40,ut),C("path",{d:v.pathData,stroke:V(v.id),"stroke-width":Y(v.id),fill:"none",class:ne(["road-path road-selected",{"road-hovered":g(l).hoveredRoadId===v.id}]),style:{"pointer-events":"none"}},null,10,ht)],8,ct))),128))]),x.value?(S(),M("g",vt,[(S(),M("g",{key:`hovered-${x.value.id}`,id:`hovered-${x.value.id}`,"data-road-name":x.value.name,class:"road-group"},[C("path",{d:x.value.pathData,stroke:"transparent","stroke-width":"30",fill:"none",class:"road-hit-area",style:{cursor:"pointer","pointer-events":"stroke"},onClick:_[0]||(_[0]=he(v=>a(x.value.id),["stop"])),onMouseenter:_[1]||(_[1]=v=>u(x.value.id,v)),onMouseleave:_[2]||(_[2]=v=>f(x.value.id))},null,40,pt),C("path",{d:x.value.pathData,stroke:V(x.value.id),"stroke-width":Y(x.value.id),fill:"none",class:"road-path road-hovered",style:{"pointer-events":"none"}},null,8,ft)],8,mt))])):N("",!0)],44,lt)):N("",!0)],512),g(h)?N("",!0):(S(),M("div",gt,[d(Xe,{size:"2em",color:"primary"}),_[3]||(_[3]=C("p",null,"Loading interactive map...",-1)),C("p",Ct,"Parsing "+q(ue.value)+" roads...",1)])),d(Ae,{name:"tooltip"},{default:R(()=>[g($)&&g(w)?(S(),M("div",{key:0,class:ne(["road-tooltip","q-pa-sm","text-weight-medium","shadow-4",g(e).surface,g(k).primary,g(s).light]),style:ke({left:g(E).x+"px",top:g(E).y+"px"}),onClick:Me},q(g(w)),7)):N("",!0)]),_:1}),C("div",Rt,[d(B,{round:"",color:"primary",icon:"add",size:"sm",onClick:g(i),disable:g(l).zoomLevel>=5},null,8,["onClick","disable"]),d(B,{round:"",color:"primary",icon:"remove",size:"sm",onClick:g(o),disable:g(l).zoomLevel<=.5},null,8,["onClick","disable"]),d(B,{round:"",color:"secondary",icon:"center_focus_strong",size:"sm",onClick:g(m),title:"Center Map"},null,8,["onClick"])])])],2))}}),yt=ze(kt,[["__scopeId","data-v-7210dafb"]]),St={class:"map-container"},_t={class:"text-subtitle1"},wt={key:0,class:"text-caption text-grey-6"},Mt={class:"overlay-content"},It={class:"row q-mb-md"},bt={class:"row q-mb-md"},Lt={class:"roads-list-container"},Dt={class:"map-controls-with-zoom"},xt={class:"text-subtitle1 q-mb-md flex items-center"},Vt={class:"q-mb-md"},Tt={class:"q-mb-md"},Wt=Ee({__name:"MapRefactoredPage",setup(b){const t=p(),e=p("default"),s=p(""),k=p("name"),l=p("asc"),n=p(!0),r=p(!1),h=[{label:"Name (A-Z)",value:"name"},{label:"Selected First",value:"selected"}],T=y(()=>t.value?.availableThemes||[]),$=y(()=>t.value?.isRoadsLoaded||!1),E=y(()=>t.value?.roadStatistics||{totalRoads:0,selectedCount:0,filteredCount:0}),w=y(()=>{const i={selectedRoadIds:[],selectedRoadId:null,hoveredRoadId:null};return t.value?.state||i}),H=y(()=>{const i=t.value?.roads||[];return s.value?i.filter(o=>o.name?.toLowerCase().includes(s.value.toLowerCase())||o.id?.toLowerCase().includes(s.value.toLowerCase())):i}),W=y(()=>{const i=[...H.value],o=w.value.selectedRoadIds||[];return i.sort((m,L)=>{if(k.value==="selected"){const D=o.includes(m.id),z=o.includes(L.id);if(D&&!z)return l.value==="asc"?-1:1;if(!D&&z)return l.value==="asc"?1:-1;const te=m.name?.toLowerCase()||"",ae=L.name?.toLowerCase()||"";return l.value==="asc"?te.localeCompare(ae):ae.localeCompare(te)}else{const D=m.name?.toLowerCase()||"",z=L.name?.toLowerCase()||"";return l.value==="asc"?D.localeCompare(z):z.localeCompare(D)}}),i}),J=i=>{const o=T.value.find(m=>m.id===i);o&&t.value?.applyTheme&&t.value.applyTheme(o)},K=()=>{t.value?.searchQuery!==void 0&&(t.value.searchQuery=s.value)},O=()=>{if(t.value?.getRandomRoad){const i=t.value.getRandomRoad();i&&t.value?.selectRoad&&t.value.selectRoad(i.id)}},I=()=>{t.value?.clearAllSelections&&t.value.clearAllSelections()},G=i=>{t.value?.toggleRoadSelection&&t.value.toggleRoadSelection(i)},U=()=>{if(t.value?.selectMultipleRoads){const i=W.value.map(L=>L.id),o=w.value.selectedRoadIds||[],m=i.filter(L=>!o.includes(L));m.length>0&&t.value.selectMultipleRoads([...o,...m])}},ee=()=>{l.value=l.value==="asc"?"desc":"asc"},X=i=>{t.value?.hoverRoad&&t.value.hoverRoad(i)},P=()=>{t.value?.clearHover&&t.value.clearHover()};return $e(s,K),Pe(()=>{setTimeout(()=>{t.value?.currentTheme?.id&&(e.value=t.value.currentTheme.id)},100)}),(i,o)=>(S(),de(Ue,{class:"map-page"},{default:R(()=>[C("div",St,[d(yt,{ref_key:"mapRef",ref:t,class:"fit"},null,512),C("div",{class:ne(["map-overlay roads-overlay",{collapsed:!n.value}])},[C("div",{class:"overlay-header",onClick:o[0]||(o[0]=m=>n.value=!n.value)},[d(se,{name:"alt_route",size:"sm",class:"q-mr-sm"}),C("span",_t,"Roads ("+q(W.value.length)+")",1),d(Oe),w.value.selectedRoadIds?.length&&n.value?(S(),M("div",wt,q(w.value.selectedRoadIds.length)+" selected ",1)):N("",!0),d(se,{name:n.value?"expand_less":"expand_more"},null,8,["name"])]),be(C("div",Mt,[d(qe,{modelValue:s.value,"onUpdate:modelValue":o[2]||(o[2]=m=>s.value=m),outlined:"",dense:"",placeholder:"Search roads...",class:"q-mb-md"},{prepend:R(()=>[d(se,{name:"search"})]),append:R(()=>[s.value?(S(),de(se,{key:0,name:"clear",class:"cursor-pointer",onClick:o[1]||(o[1]=m=>s.value="")})):N("",!0)]),_:1},8,["modelValue"]),C("div",It,[d(De,{modelValue:k.value,"onUpdate:modelValue":o[3]||(o[3]=m=>k.value=m),options:h,"option-label":"label","option-value":"value","emit-value":"","map-options":"",dense:"",outlined:"",label:"Sort by",class:"col"},null,8,["modelValue"]),d(B,{flat:"",dense:"",icon:l.value==="asc"?"arrow_upward":"arrow_downward",onClick:ee,title:`Sort ${l.value==="asc"?"Descending":"Ascending"}`},null,8,["icon","title"])]),C("div",bt,[d(B,{flat:"",dense:"",color:"primary",icon:"select_all",label:"Select All",onClick:U,disable:W.value.length===0,size:"sm"},null,8,["disable"]),d(B,{flat:"",dense:"",color:"negative",icon:"clear_all",label:"Clear",onClick:I,disable:(w.value.selectedRoadIds?.length||0)===0,size:"sm"},null,8,["disable"]),d(B,{flat:"",dense:"",color:"secondary",icon:"shuffle",label:"Random",onClick:O,size:"sm"})]),C("div",Lt,[d(xe,{dense:""},{default:R(()=>[(S(!0),M(ve,null,me(W.value,(m,L)=>(S(),de(ie,{key:`road-${L}`,clickable:"",active:w.value.selectedRoadIds?.includes(m.id),onClick:D=>G(m.id),onMouseenter:D=>X(m.id),onMouseleave:P,class:ne(["road-list-item",{"road-list-item--hovered":w.value.hoveredRoadId===m.id,"road-list-item--selected":w.value.selectedRoadIds?.includes(m.id)}])},{default:R(()=>[d(Z,{side:""},{default:R(()=>[d(He,{"model-value":w.value.selectedRoadIds?.includes(m.id)||!1,"onUpdate:modelValue":()=>G(m.id),color:"primary"},null,8,["model-value","onUpdate:modelValue"])]),_:2},1024),d(Z,null,{default:R(()=>[d(j,null,{default:R(()=>[A(q(m.name),1)]),_:2},1024)]),_:2},1024),d(Z,{side:""},{default:R(()=>[d(se,{name:"location_on",color:w.value.selectedRoadIds?.includes(m.id)?"primary":"grey"},null,8,["color"])]),_:2},1024)]),_:2},1032,["active","onClick","onMouseenter","class"]))),128)),W.value.length===0&&$.value?(S(),de(ie,{key:0},{default:R(()=>[d(Z,null,{default:R(()=>[d(j,{class:"text-grey-6"},{default:R(()=>[A(q(s.value?"No roads match your search":"No roads found"),1)]),_:1})]),_:1})]),_:1})):N("",!0),$.value?N("",!0):(S(),de(ie,{key:1},{default:R(()=>[d(Z,null,{default:R(()=>[d(j,{class:"text-grey-6"},{default:R(()=>o[6]||(o[6]=[A(" Loading roads... ",-1)])),_:1,__:[6]})]),_:1})]),_:1}))]),_:1})])],512),[[Le,n.value]])],2),C("div",Dt,[d(B,{round:"",color:"primary",icon:"settings",size:"sm",onClick:o[4]||(o[4]=m=>r.value=!r.value),class:ne([{active:r.value},"controls-toggle-btn"])},null,8,["class"]),be(d(Ne,{class:"controls-popup"},{default:R(()=>[d(Be,{class:"q-pb-sm"},{default:R(()=>[C("div",xt,[d(se,{name:"tune",class:"q-mr-sm"}),o[7]||(o[7]=A(" Map Controls ",-1))]),C("div",Vt,[d(De,{modelValue:e.value,"onUpdate:modelValue":[o[5]||(o[5]=m=>e.value=m),J],options:T.value,"option-label":"name","option-value":"id","emit-value":"","map-options":"",dense:"",outlined:"",label:"Theme"},null,8,["modelValue","options"])]),C("div",Tt,[o[10]||(o[10]=C("div",{class:"text-subtitle2 q-mb-sm"},"Statistics",-1)),d(xe,{dense:"",class:"rounded-borders"},{default:R(()=>[d(ie,null,{default:R(()=>[d(Z,null,{default:R(()=>[d(j,{caption:""},{default:R(()=>o[8]||(o[8]=[A("Total Roads",-1)])),_:1,__:[8]}),d(j,null,{default:R(()=>[A(q(E.value.totalRoads),1)]),_:1})]),_:1})]),_:1}),d(ie,null,{default:R(()=>[d(Z,null,{default:R(()=>[d(j,{caption:""},{default:R(()=>o[9]||(o[9]=[A("Selected",-1)])),_:1,__:[9]}),d(j,null,{default:R(()=>[A(q(w.value.selectedRoadIds?.length||0)+" roads",1)]),_:1})]),_:1})]),_:1})]),_:1})])]),_:1})]),_:1},512),[[Le,r.value]])])])]),_:1}))}}),Xt=ze(Wt,[["__scopeId","data-v-cf361f0e"]]);export{Xt as default};
