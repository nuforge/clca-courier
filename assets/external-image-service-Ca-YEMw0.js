var b=Object.defineProperty;var f=(d,t,e)=>t in d?b(d,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):d[t]=e;var g=(d,t,e)=>f(d,typeof t!="symbol"?t+"":t,e);const h=class h{db=null;dbName="external-image-cache";dbVersion=1;storeName="images";maxCacheSize=50*1024*1024;defaultOptions={maxWidth:1920,maxHeight:1080,quality:.9,forceRefresh:!1,maxAge:10080*60*1e3};constructor(){}static getInstance(){return h.instance||(h.instance=new h),h.instance}async initDB(){return new Promise((t,e)=>{const a=indexedDB.open(this.dbName,this.dbVersion);a.onerror=()=>e(new Error("Failed to open IndexedDB")),a.onsuccess=()=>{this.db=a.result,t()},a.onupgradeneeded=c=>{const n=c.target.result;if(!n.objectStoreNames.contains(this.storeName)){const s=n.createObjectStore(this.storeName,{keyPath:"url"});s.createIndex("timestamp","timestamp",{unique:!1}),s.createIndex("size","size",{unique:!1})}}})}generateCacheKey(t,e){const a=JSON.stringify({maxWidth:e.maxWidth,maxHeight:e.maxHeight,quality:e.quality});return`${t}:${btoa(a)}`}isLocalUrl(t){return t.startsWith("/")||t.startsWith("./")||t.startsWith("../")||t.startsWith("data:")||!t.includes("://")}async processImage(t,e){return!e.maxWidth&&!e.maxHeight&&!e.quality?t:new Promise(a=>{const c=new Image;c.onload=()=>{const n=document.createElement("canvas"),s=n.getContext("2d");let{width:r,height:i}=c;e.maxWidth&&r>e.maxWidth&&(i=i*e.maxWidth/r,r=e.maxWidth),e.maxHeight&&i>e.maxHeight&&(r=r*e.maxHeight/i,i=e.maxHeight),n.width=r,n.height=i,s.drawImage(c,0,0,r,i),n.toBlob(o=>{a(o||t)},"image/jpeg",e.quality||.8)},c.onerror=()=>a(t),c.src=URL.createObjectURL(t)})}async cacheImage(t,e){if(this.db||await this.initDB(),!this.db)return;const a=await e.arrayBuffer(),c=URL.createObjectURL(e),n={url:t,data:a,mimeType:e.type||"image/jpeg",timestamp:Date.now(),size:e.size,objectUrl:c,metadata:{originalUrl:t,cacheKey:t,compressed:!0}};return new Promise((s,r)=>{const m=this.db.transaction([this.storeName],"readwrite").objectStore(this.storeName).put(n);m.onsuccess=()=>s(),m.onerror=()=>r(new Error(m.error?.message||"Cache save error"))})}async getCachedImage(t){return this.db||await this.initDB(),this.db?new Promise((e,a)=>{const s=this.db.transaction([this.storeName],"readonly").objectStore(this.storeName).get(t);s.onsuccess=()=>{const r=s.result;if(r&&r.objectUrl){const i=new Image;i.onload=()=>e(r),i.onerror=()=>{const o=new Blob([r.data],{type:r.mimeType});r.objectUrl=URL.createObjectURL(o),e(r)},i.src=r.objectUrl}else if(r){const i=new Blob([r.data],{type:r.mimeType});r.objectUrl=URL.createObjectURL(i),e(r)}else e(null)},s.onerror=()=>a(new Error(s.error?.message||"Cache read error"))}):null}async getImage(t,e={}){try{const a={...this.defaultOptions,...e};if(this.isLocalUrl(t))return t;const c=this.generateCacheKey(t,e),n=await this.getCachedImage(c);if(n&&!(Date.now()-n.timestamp>a.maxAge)&&!a.forceRefresh)return n.objectUrl||null;try{const s=await fetch(t,{mode:"cors",headers:{Accept:"image/*"}});if(!s.ok)return console.warn(`Failed to fetch image: ${s.status} ${s.statusText}`,t),null;const r=await s.blob(),i=await this.processImage(r,a);return await this.cacheImage(c,i),URL.createObjectURL(i)}catch(s){return console.warn("CORS or network error loading external image:",s,"URL:",t),null}}catch(a){return console.error("Failed to fetch external image:",a),null}}async preloadImage(t,e={}){try{return await this.getImage(t,e)!==null}catch(a){return console.error("Failed to preload image:",a),!1}}async clearCache(){if(this.db||await this.initDB(),!!this.db)return new Promise((t,e)=>{const n=this.db.transaction([this.storeName],"readwrite").objectStore(this.storeName).clear();n.onsuccess=()=>t(),n.onerror=()=>e(new Error(n.error?.message||"Cache clear error"))})}async getCacheStats(){return this.db||await this.initDB(),this.db?new Promise((t,e)=>{const n=this.db.transaction([this.storeName],"readonly").objectStore(this.storeName).getAll();n.onsuccess=()=>{const s=n.result,r=s.length,i=s.reduce((m,u)=>m+u.size,0),o={count:r,totalSize:i};s.length>0&&(o.oldestEntry=Math.min(...s.map(m=>m.timestamp))),t(o)},n.onerror=()=>e(new Error(n.error?.message||"Cache stats error"))}):{count:0,totalSize:0}}};g(h,"instance");let l=h;const x=l.getInstance();export{l as E,x as e};
