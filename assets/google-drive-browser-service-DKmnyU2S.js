var l=Object.defineProperty;var u=(o,e,t)=>e in o?l(o,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[e]=t;var d=(o,e,t)=>u(o,typeof e!="symbol"?e+"":e,t);const r=class r{apiKey="";clientId="";scope="https://www.googleapis.com/auth/drive.readonly";accessToken="";isAuthenticated=!1;baseUrl="https://www.googleapis.com/drive/v3";constructor(){}static getInstance(){return r.instance||(r.instance=new r),r.instance}initialize(e){this.apiKey=e.apiKey,this.clientId=e.clientId,this.scope=e.scope||this.scope}async loadGoogleAPI(){return new Promise((e,t)=>{if(typeof window>"u"){t(new Error("Google API can only be loaded in browser environment"));return}if(window.gapi){e();return}const i=document.createElement("script");i.src="https://apis.google.com/js/api.js",i.onload=()=>{window.gapi.load("auth2",()=>{e()})},i.onerror=()=>t(new Error("Failed to load Google API")),document.head.appendChild(i)})}async authenticate(){try{await this.loadGoogleAPI(),await window.gapi.auth2.init({client_id:this.clientId,scope:this.scope});const e=window.gapi.auth2.getAuthInstance();if(e.isSignedIn.get()){const i=e.currentUser.get();return this.accessToken=i.getAuthResponse().access_token,this.isAuthenticated=!0,!0}const t=await e.signIn();return this.accessToken=t.getAuthResponse().access_token,this.isAuthenticated=!0,console.log("Successfully authenticated with Google Drive"),!0}catch(e){return console.error("Authentication failed:",e),this.isAuthenticated=!1,!1}}async signOut(){window.gapi&&window.gapi.auth2&&await window.gapi.auth2.getAuthInstance().signOut(),this.accessToken="",this.isAuthenticated=!1}isAuth(){return this.isAuthenticated&&this.accessToken!==""}async makeRequest(e,t={}){if(!this.isAuth())throw new Error("Not authenticated with Google Drive");const i=new URL(`${this.baseUrl}${e}`);t.key=this.apiKey,Object.entries(t).forEach(([a,n])=>{if(n!=null){const c=typeof n=="string"?n:typeof n=="number"?String(n):JSON.stringify(n);i.searchParams.set(a,c)}});const s=await fetch(i.toString(),{headers:{Authorization:`Bearer ${this.accessToken}`,"Content-Type":"application/json"}});if(!s.ok){const a=await s.text();throw new Error(`API request failed: ${s.status} - ${a}`)}return s.json()}async getFile(e,t){try{const i={fields:t||"id,name,mimeType,size,webViewLink,webContentLink,thumbnailLink,createdTime,modifiedTime,parents"};return await this.makeRequest(`/files/${e}`,i)}catch(i){return console.error("Error getting file:",i),null}}async searchFiles(e={}){try{let t=e.query||"";if(e.parents&&e.parents.length>0){const a=e.parents.map(n=>`'${n}' in parents`).join(" or ");t=t?`(${t}) and (${a})`:a}if(e.mimeType){const a=`mimeType='${e.mimeType}'`;t=t?`(${t}) and ${a}`:a}const i={q:t,pageSize:e.pageSize||100,orderBy:e.orderBy||"modifiedTime desc",fields:"files(id,name,mimeType,size,webViewLink,webContentLink,thumbnailLink,createdTime,modifiedTime,parents)"};return(await this.makeRequest("/files",i)).files||[]}catch(t){return console.error("Error searching files:",t),[]}}async searchImages(e,t){const s=["image/jpeg","image/png","image/gif","image/webp","image/svg+xml","image/bmp"].map(c=>`mimeType='${c}'`).join(" or "),n={query:t?`(${t}) and (${s})`:s,orderBy:"modifiedTime desc"};return e&&(n.parents=e),this.searchFiles(n)}async downloadFile(e){if(!this.isAuth())throw new Error("Not authenticated with Google Drive");try{const t=`${this.baseUrl}/files/${e}?alt=media&key=${this.apiKey}`,i=await fetch(t,{headers:{Authorization:`Bearer ${this.accessToken}`}});if(!i.ok)throw new Error(`Download failed: ${i.status}`);return i.blob()}catch(t){return console.error("Error downloading file:",t),null}}getAuthenticatedDownloadUrl(e){return`${this.baseUrl}/files/${e}?alt=media&access_token=${this.accessToken}`}getThumbnailUrl(e,t=400){return`https://drive.google.com/thumbnail?id=${e}&sz=w${t}`}getPublicDirectUrl(e){return`https://drive.google.com/uc?export=view&id=${e}`}async listFilesInFolder(e,t){const i={parents:[e],orderBy:"name"};return t&&(i.mimeType=t),this.searchFiles(i)}static extractFileId(e){const t=[/\/file\/d\/([a-zA-Z0-9-_]+)/,/id=([a-zA-Z0-9-_]+)/,/\/d\/([a-zA-Z0-9-_]+)/,/drive\.google\.com\/open\?id=([a-zA-Z0-9-_]+)/];for(const i of t){const s=e.match(i);if(s&&s[1])return s[1]}return null}static isGoogleDriveUrl(e){return e.includes("drive.google.com")||e.includes("docs.google.com")}getAuthStatus(){return{isAuthenticated:this.isAuthenticated,hasToken:this.accessToken!==""}}};d(r,"instance");let h=r;const m=h.getInstance();export{h as G,m as g};
